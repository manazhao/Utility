#!/usr/bin/perl
# map author demographic information from the photo url to its id
# meanwhile, remove the ill formed or empty attributes 

use strict;
use warnings;
use Cwd;
use File::Basename;
use Getopt::Long;
use JSON qw(decode_json);
use JSON qw(encode_json);


###### template snippet for retrieving command line arguments #######################
my $demo_file = '';
my $url_id_file = '';
my $result_file = '';
my $help = 0;

# get the command line arguments
GetOptions(
	"demo-file=s" => \$demo_file,
	"url-id-file=s" => \$url_id_file,
	"result-file=s" => \$result_file,
	"help" => \$help
) or die "error with getting command arguments\n";

sub usage{
print qq{
Usage : $0
--demo-file	demographic information json file which is generated by OpenBR package	
--url-id-file	a file that maps photo url to amazon author id	
--result-file	the author demo file with id remapped
--help print this usage message
};
}

if($demo_file eq '' or $url_id_file eq ''  or $result_file eq '' or $help){
	usage();
	exit(-1);
}
######################################################################################

# read the demo file and url id map file
open URL_ID_FILE, "<", $url_id_file or die $!;
open DEMO_FILE, "<", $demo_file or die $!;
open RESULT_FILE, ">", $result_file or die $!;
my %url_id_map = ();

while(<URL_ID_FILE>){
	chomp;
	my($url,$id) = split "\t";
	# replace , with _ for the url
	$url =~ s/\,/_/g;
	# only keep the file name, remove the path
	$url =~ s/.+\///g;
	$url_id_map{$url} = $id;
}

close URL_ID_FILE;

while(<DEMO_FILE>){
	my $line = $_;
	chomp;
	my $author_json = decode_json($_);
	my $age = $author_json->{"age"};
	my $gender = $author_json->{"gender"};
	my %result_json = ();
	my $error_flag = 0;

	# check the age and gender format
	if(defined $age and  $age =~ m/[\d\.]+/){
		$result_json{"age"} = $age;
	}else{
		$error_flag = 1;
	}
	if(defined $gender && $gender =~ m/[f]?[e]?male/i){
		$gender =~ s/^\s+|\s+$//g;
		$result_json{"gender"} = $gender;
	}else{
		$error_flag = 1;	
	}
	if($error_flag){
		print STDERR $line;
	}
	# output the result
	my $url = $author_json->{"url"};
	# only keep the file name
	$url =~ s/.+\///g;
	if(exists $url_id_map{$url}){
		my $author_id = $url_id_map{$url};
		$result_json{"id"} = $author_id;
		print RESULT_FILE encode_json(\%result_json) . "\n";
	}
}
close RESULT_FILE;
close DEMO_FILE;

